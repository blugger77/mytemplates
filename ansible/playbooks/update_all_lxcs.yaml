---
- hosts: all_ubuntus
  #become: yes // become the root

  tasks:

    - name: Update packages with apt
      when: ansible_pkg_mgr == 'apt'
      ansible.builtin.apt:

        #  Run the equivalent of apt-get update command.
        update_cache: true

        # Update the apt cache if it is older than the cache_valid_time state in the 300 (5 minutes) seconds.
        #cache_valid_time: 300

        # All packages.
        name: "*"

    - name: Update Clean
      when: ansible_pkg_mgr == 'apt'

      # Run the equivalent of "apt-get clean".
      apt:
        clean: yes

    - name: Upgrade OS
      when: ansible_pkg_mgr == 'apt'
      # Upgrade the OS (apt-get dist-upgrade)
      ansible.builtin.apt:
        upgrade=dist
        force_apt_get=yes

 #   - name: Upgrade all packages with apt
 #     when: ansible_pkg_mgr == 'apt'
 #     ansible.builtin.apt:
 #       # Upgrade all packages with apt
 #       state: latest


- hosts: all_ubuntus_with_influxdb

  tasks:

    - name: Create Key
      command: echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | sha256sum -c && cat influxdata-archive_compat.key | gpg --dearmor | tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null

    - name: Repository
      command: echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | sudo tee /etc/apt/sources.list.d/influxdata.list

    - name: Update
      command: apt-get update

    - name: Install InfluxDB
      command: apt-get install influxdb2 -y
      register: output

    - debug:
       msg: "{{ output.stdout_lines }}"


    - name: disable upgrade influxdb2-cli
      dpkg_selections:
          name: "influxdb2-cli"
          selection: hold

    - name: disable upgrade influxdb2
      dpkg_selections:
          name: "influxdb2"
          selection: hold

    - name: Update packages with apt
      when: ansible_pkg_mgr == 'apt'
      ansible.builtin.apt:

        #  Run the equivalent of apt-get update command.
        # update_cache: true

        # Update the apt cache if it is older than the cache_valid_time state in the 300 (5 minutes) seconds.
        #cache_valid_time: 300

        # All packages.
        name: "*"

    - name: Update Clean
      when: ansible_pkg_mgr == 'apt'

      # Run the equivalent of "apt-get clean".
      apt:
        clean: yes

    - name: Upgrade OS
      when: ansible_pkg_mgr == 'apt'
      # Upgrade the OS (apt-get dist-upgrade)
      ansible.builtin.apt:
        upgrade=dist
        force_apt_get=yes
